initSidebarItems({"mod":[["actors","Helper actors"],["fut","Custom `Future` implementation with `Actix` support"],["msgs","Actix system messages"]],"struct":[["Addr","Address of the actor"],["Condition",""],["Context","Actor execution context"],["ContextFut",""],["ContextParts",""],["Envelope",""],["Mailbox",""],["MessageResult","Helper type that implements `MessageResponse` trait"],["Recipient","`Recipient` type allows to send one specific message to an actor."],["Registry","Actors registry"],["Request","`Request` is a `Future` which represents asynchronous message sending process."],["Response","Helper type for representing different type of message responses"],["SpawnHandle","Spawned future handle. Could be used for cancelling spawned future."],["Supervisor","Actor supervisor"],["SyncArbiter","Sync arbiter"],["SyncContext","Sync actor execution context"],["System","System is an actor which manages runtime."],["SystemRegistry","System wide actors registry"]],"trait":[["Actor","Actors are objects which encapsulate state and behavior."],["ActorContext","Actor execution context"],["ArbiterService","Trait defines arbiter's service."],["AsyncContext","Asynchronous execution context"],["AsyncContextParts",""],["ContextFutureSpawner","Helper trait which can spawn future into actor's context"],["Handler","Message handler"],["Message","Message type"],["MessageResponse","Trait which defines message response"],["ResponseChannel","Trait defines message response channel"],["SystemService","Trait defines system's service."],["ToEnvelope","Converter trait, packs message to suitable envelope"]],"type":[["ResponseActFuture","A specialized actor future for async message handler"],["ResponseFuture","A specialized future for async message handler"]]});